states:
  states_type: Timeseries
  data_source: timeseries_8000.csv.gz
  output_vars: [WS, WD, TI, RHO]
  var2col:
    WS: ws
    WD: wd 
    TI: ti
  fixed_vars:
    RHO: 1.225
  
model_book:
  turbine_types:
    - name: my_turbine
      ttype_type: PCtFile
      data_source: NREL-5MW-D126-H90.csv
  
wind_farm:
  layouts:
    - function: add_from_file
      file_path: test_farm_67.csv
      turbine_models: [my_turbine]

algorithm:
  algo_type: Downwind
  wake_models: [Bastankhah2014_linear_k004]

outputs:
  - output_type: plt
    functions:
      - function: figure
        figsize: [10, 4]
        result_labels: $fig   # store the result of the function under $fig
  - object: $fig              # now run functions of the object behind $fig  
    functions:
      - function: add_subplot
        args: [1, 2, 1]
        result_labels: $ax1   # store the pyplot.Axes object under $ax1
      - function: add_subplot
        args: [1, 2, 2]
        polar: True           # this Axes object applies polar projection
        result_labels: $ax2   # store the pyplot.Axes object under $ax2
  - output_type: FarmLayoutOutput
    functions:
      - function: get_figure
        fig: $fig             # pass the stored Figure object to the function
        ax: $ax1              # pass the stored Axes object to the function
  - output_type: RosePlotOutput
    functions:
      - function: get_figure
        turbine: 0
        ws_var: AMB_REWS
        ws_bins: [0, 3, 6, 9, 12, 15, 18, 21]
        add_inf: True
        wd_sectors: 16
        title: Wind rose
        fig: $fig             # pass the stored Figure object to the function
        ax: $ax2              # pass the stored Axes object to the function
  - output_type: plt
    functions:
      - function: savefig     # save the created figure to file
        fname: result.png     # file location will be relative to the yaml file
      - function: show
      - function: close
